!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
subroutine make_fermion_correlation_from_Dinv(&
    Geta_eta, Glambda_eta, Gchi_eta, &
    Geta_lambda, Glambda_lambda, Gchi_lambda, &
    Geta_chi, Glambda_chi, Gchi_chi, &
    Dinv)
use global_parameters
use parallel
implicit none

complex(kind(0d0)), intent(out) :: Geta_eta(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_sites,1:num_sites) 
complex(kind(0d0)), intent(out) :: Glambda_eta(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_links,1:num_sites) 
complex(kind(0d0)), intent(out) :: Gchi_eta(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_faces,1:num_sites) 
!!!
complex(kind(0d0)), intent(out) :: Geta_lambda(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_sites,1:num_links) 
complex(kind(0d0)), intent(out) :: Glambda_lambda(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_links,1:num_links) 
complex(kind(0d0)), intent(out) :: Gchi_lambda(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_faces,1:num_links) 
!!!
complex(kind(0d0)), intent(out) :: Geta_chi(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_sites,1:num_faces) 
complex(kind(0d0)), intent(out) :: Glambda_chi(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_links,1:num_faces) 
complex(kind(0d0)), intent(out) :: Gchi_chi(1:NMAT,1:NMAT,1:NMAT,1:NMAT,1:global_num_faces,1:num_faces) 

complex(kind(0d0)), intent(in) :: Dinv(:,:)
integer :: numF

complex(kind(0d0)) :: modes_eta(1:dimG,1:NMAT,1:NMAT,1:num_sites)
complex(kind(0d0)) :: modes_lambda(1:dimG,1:NMAT,1:NMAT,1:num_links)
complex(kind(0d0)) :: modes_chi(1:dimG,1:NMAT,1:NMAT,1:num_faces)

integer :: gs,gl,gf
integer :: ls,ll,lf
integer :: i,j,a,b
integer :: Dlabel

numF=(global_num_sites+global_num_links+global_num_faces)*(NMAT*NMAT-1)
if( size(Dinv,1) .ne. numF) then
  write(*,*) "size of Dinv is incorrect."
  call stop_for_test
endif

Dlabel=0
do gs=1,global_num_sites
  do b=1,dimG
    Dlabel=Dlabel+1
    !! eta_Gany=Dinv_{(ls,a);(gs,b)}
    !! lambda_Gany=Dinv_{(ll,a);(gs,b)}
    !! chi_Gany=Dinv_{(lf,a);(gs,b)}
    call set_correlation(modes_eta, modes_lambda, modes_chi, Dinv(:,Dlabel),b)
  enddo
  call set_Gany_any(Geta_eta,Geta_lambda,Geta_chi,modes_eta,modes_lambda,modes_chi,gs)
enddo

do gl=1,global_num_links
  do b=1,dimG
    Dlabel=Dlabel+1
    !! eta_Gany=Dinv_{(ls,a);(gl,b)}
    !! lambda_Gany=Dinv_{(ll,a);(gl,b)}
    !! chi_Gany=Dinv_{(lf,a);(gl,b)}
    call set_correlation(modes_eta, modes_lambda, modes_chi, Dinv(:,Dlabel),b)
  enddo
  call set_Gany_any(Glambda_eta,Glambda_lambda,Glambda_chi,modes_eta,modes_lambda,modes_chi,gl)
enddo

do gf=1,global_num_faces
  do b=1,dimG
    Dlabel=Dlabel+1
    !! eta_Gany=Dinv_{(ls,a);(gf,b)}
    !! lambda_Gany=Dinv_{(ll,a);(gf,b)}
    !! chi_Gany=Dinv_{(lf,a);(gf,b)}
    call set_correlation(modes_eta, modes_lambda, modes_chi, Dinv(:,Dlabel),b)
  enddo
  call set_Gany_any(Gchi_eta,Gchi_lambda,Gchi_chi,modes_eta,modes_lambda,modes_chi,gf)
enddo

end subroutine make_fermion_correlation_from_Dinv

!!!!!!!!!!!!!!!!!!!!!!!!
subroutine set_Gany_any(&
    Gany_eta,Gany_lambda,Gany_chi,&
    modes_eta,modes_lambda,modes_chi, g_label)
use global_parameters
use SUN_generators, only : make_traceless_matrix_from_modes
implicit none

complex(kind(0d0)), intent(out) :: Gany_eta(:,:,:,:,:,:) 
complex(kind(0d0)), intent(out) :: Gany_lambda(:,:,:,:,:,:)
complex(kind(0d0)), intent(out) :: Gany_chi(:,:,:,:,:,:)

complex(kind(0d0)), intent(in) :: modes_eta(1:dimG,1:NMAT,1:NMAT,1:num_sites)
complex(kind(0d0)), intent(in) :: modes_lambda(1:dimG,1:NMAT,1:NMAT,1:num_links)
complex(kind(0d0)), intent(in) :: modes_chi(1:dimG,1:NMAT,1:NMAT,1:num_faces)

integer, intent(in) :: g_label

integer :: i,j,a
integer :: ls,ll,lf

do j=1,NMAT
  do i=1,NMAT
    do ls=1,num_sites
      call Make_traceless_matrix_from_modes(&
        Gany_eta(:,:,i,j,g_label,ls),NMAT,modes_eta(:,i,j,ls))
    enddo
    do ll=1,num_links
      call Make_traceless_matrix_from_modes(&
        Gany_lambda(:,:,i,j,g_label,ll),NMAT,modes_lambda(:,i,j,ll))
    enddo
    do lf=1,num_faces
      call Make_traceless_matrix_from_modes(&
        Gany_chi(:,:,i,j,g_label,lf),NMAT,modes_chi(:,i,j,lf))
    enddo
  enddo
enddo
end subroutine set_Gany_any


!!!!!!!!!!!!!!!!!!!!!!!!
subroutine set_correlation(&
    modes_eta,modes_lambda,modes_chi,&
    Dinv_vec, suN_label)!,rank,tag)
use global_parameters
use parallel
use SUN_generators, only : make_traceless_matrix_from_modes
implicit none

complex(kind(0d0)), intent(inout) :: modes_eta(1:dimG,1:NMAT,1:NMAT,1:num_sites)
complex(kind(0d0)), intent(inout) :: modes_lambda(1:dimG,1:NMAT,1:NMAT,1:num_links)
complex(kind(0d0)), intent(inout) :: modes_chi(1:dimG,1:NMAT,1:NMAT,1:num_faces)
complex(kind(0d0)), intent(in) :: Dinv_vec(:)
integer, intent(in) :: suN_label


complex(kind(0d0)) :: eta_Gany(1:NMAT,1:NMAT,1:num_sites)
complex(kind(0d0)) :: lambda_Gany(1:NMAT,1:NMAT,1:num_links)
complex(kind(0d0)) :: chi_Gany(1:NMAT,1:NMAT,1:num_faces)

complex(kind(0d0)) :: ele
complex(kind(0d0)) :: modes(1:dimG)
complex(kind(0d0)) :: matrix(1:NMAT,1:NMAT)

integer :: rank, ls,ll,lf, tag,i,j
integer :: gs,gl,gf
integer :: a,b

tag=0
I=0
do gs=1,global_num_sites
  rank=local_site_of_global(gs)%rank_
  ls=local_site_of_global(gs)%label_
  tag=tag+1
  if( MYRANK==0 ) then
    do a=1,dimG
      I=I+1
      modes(a)=Dinv_vec(I)
    enddo
    if( rank /= 0 ) then 
      call MPI_SEND(modes,NMAT*NMAT-1,MPI_DOUBLE_COMPLEX,&
        rank,tag,MPI_COMM_WORLD,IERR)
    endif
  endif
  if( MYRANK==rank .and. rank/=0 ) then
    call MPI_RECV(modes,NMAT*NMAT-1,MPI_DOUBLE_COMPLEX,&
      0,tag,MPI_COMM_WORLD,ISTATUS,IERR)
  endif
  if( MYRANK == rank ) then
    call Make_traceless_matrix_from_modes(eta_Gany(:,:,ls),NMAT,MODES)
  endif
enddo
!!!
do gl=1,global_num_links
  rank=local_link_of_global(gl)%rank_
  ll=local_link_of_global(gl)%label_
  tag=tag+1
  if( MYRANK== 0 ) then
    do a=1,dimG
      I=I+1
      modes(a)=Dinv_vec(I)
    enddo
    if( rank /= 0 ) then 
      call MPI_SEND(modes,NMAT*NMAT-1,MPI_DOUBLE_COMPLEX,&
        rank,tag,MPI_COMM_WORLD,IERR)
    endif
  endif
  if( MYRANK==rank .and. rank/=0 ) then
    call MPI_RECV(modes,NMAT*NMAT-1,MPI_DOUBLE_COMPLEX,&
      0,tag,MPI_COMM_WORLD,ISTATUS,IERR)
  endif
  if( MYRANK == rank ) then
    call Make_traceless_matrix_from_modes(lambda_Gany(:,:,ll),NMAT,MODES)
  endif
enddo
!!!
do gf=1,global_num_faces
  rank=local_face_of_global(gf)%rank_
  lf=local_face_of_global(gf)%label_
  tag=tag+1
  if( MYRANK==0 ) then 
    do a=1,dimG
      I=I+1
      modes(a)=Dinv_vec(I)
    enddo
    if( rank /= 0 ) then 
      call MPI_SEND(modes,NMAT*NMAT-1,MPI_DOUBLE_COMPLEX,&
        rank,tag,MPI_COMM_WORLD,IERR)
    endif
  endif
  if( MYRANK==rank .and. rank/=0 ) then
    call MPI_RECV(modes,NMAT*NMAT-1,MPI_DOUBLE_COMPLEX,&
      0,tag,MPI_COMM_WORLD,ISTATUS,IERR)
  endif
  if( MYRANK == rank ) then
    call Make_traceless_matrix_from_modes(chi_Gany(:,:,lf),NMAT,MODES)
  endif
enddo


do j=1,NMAT
  do i=1,NMAT
    do ls=1,num_sites
      modes_eta(suN_label,i,j,ls)=eta_Gany(i,j,ls)
    enddo
    do ll=1,num_links
      modes_lambda(suN_label,i,j,ll)=lambda_Gany(i,j,ll)
    enddo
    do lf=1,num_faces
      modes_chi(suN_label,i,j,lf)=chi_Gany(i,j,lf)
    enddo
  enddo
enddo


end subroutine set_correlation
 

